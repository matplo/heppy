set(MODULE_NAME hepmc3ext)
set(MODULE ${PROJECT_NAME}_${MODULE_NAME})
set(NAME_LIB ${MODULE})

include_directories(${CMAKE_CURRENT_SOURCE_DIR})
file(GLOB SOURCES_LIB ${CMAKE_CURRENT_SOURCE_DIR}/*.cxx)
message(STATUS "SOURCES: ${SOURCES_LIB}")
string(REPLACE ".cxx" ".hh" HEADERS_LIB "${SOURCES_LIB}")
string(REPLACE ".cxx" "_wrap.c" SWIG_HEADERS_LIB "${SOURCES_LIB}")

# if (CONDA_ENV_ON)
# 	find_file( PYTHIA_HEPMC3_H Pythia8ToHepMC3.h PATHS $ENV{CONDA_PREFIX})
# 	if (NOT PYTHIA_HEPMC3_H)
# 		set(LEGACY_PATH "${HEPPY_DIR}/external/legacy")
# 		find_file( PYTHIA_HEPMC3_H Pythia8/Pythia8ToHepMC3.h PATHS ${LEGACY_PATH} )
# 		message(STATUS "adding ${PYTHIA_HEPMC3_H}")
# 		list(APPEND HEADERS_LIB ${PYTHIA_HEPMC3_H})
# 	endif()
# 	find_file( PYTHIA_HEPMC3_CC Pythia8ToHepMC3.cc PATHS $ENV{CONDA_PREFIX})
# 	if (NOT PYTHIA_HEPMC3_CC)
# 		set(LEGACY_PATH "${HEPPY_DIR}/external/legacy")
# 		find_file( PYTHIA_HEPMC3_CC Pythia8/Pythia8ToHepMC3.cc PATHS ${LEGACY_PATH} )
# 		message(STATUS "adding ${PYTHIA_HEPMC3_CC}")
# 		list(APPEND SOURCES_LIB ${PYTHIA_HEPMC3_CC})
# 	endif()
# endif()

add_library(${NAME_LIB} SHARED ${SOURCES_LIB})
# target_include_directories(${NAME_LIB} PUBLIC ${HEPMC3_INCLUDE_DIR} ${LEGACY_PATH})
target_include_directories(${NAME_LIB} PUBLIC ${HEPMC3_INCLUDE_DIR})
message(STATUS "HEPMC3_LIBRARY is ${HEPMC3_LIBRARY}")
target_link_libraries(${NAME_LIB} PUBLIC ${HEPMC3_LIBRARY})

set(SWIG_TARGET_LINK_LIBRARIES ${HEPMC3_LIBRARY})
set(SWIG_TARGET_INCLUDE_DIRECTORIES ${HEPMC3_INCLUDE_DIRS})
swigify()
install_targets_custom()
